syntax = "proto3";

package logcache;

import "v2/envelope.proto";
import "google/api/annotations.proto";

// The egress service is used to read data from the LogCache system.
service Egress {
    rpc Read(ReadRequest) returns (ReadResponse) {
        option (google.api.http) = {
            get: "/v1/read/{source_id}"
        };
    }
}

message ReadRequest {
    string source_id = 1;
    int64 start_time = 2;
    int64 end_time = 3;
    int64 limit = 4;
    EnvelopeTypes envelope_type = 5;

    // The filter_template is a golang text/template that is ran for each
    // envelope. If the resulting string is empty, the envelope is filtered
    // out and not included in the result.
    string filter_template = 6;
}

enum EnvelopeTypes {
    ANY = 0;
    LOG = 1;
    COUNTER = 2;
    GAUGE = 3;
    TIMER = 4;
    EVENT = 5;
}

message ReadResponse {
    loggregator.v2.EnvelopeBatch envelopes = 1;
}
